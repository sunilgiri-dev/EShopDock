services:
  # MongoDB for all services
  mongo:
    image: mongo:5
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Eureka Discovery Server
  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - JAVA_OPTS=
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "netstat -ln | grep :8761 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - JWT_SECRET=verySecureRandomKeyForDevelopmentOnlyThisKeyMustBeAtLeast64BytesLongForHS512AlgorithmToWorkProperlyAndSecurelyInProduction
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "netstat -ln | grep :8080 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Auth Service
  auth-service:
    build: ./auth-service
    container_name: auth-service
    environment:
      - JWT_SECRET=verySecureRandomKeyForDevelopmentOnlyThisKeyMustBeAtLeast64BytesLongForHS512AlgorithmToWorkProperlyAndSecurelyInProduction
    depends_on:
      mongo:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep java || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Product Service
  product-service:
    build: ./product-service
    container_name: product-service
    depends_on:
      mongo:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep java || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Order Service
  order-service:
    build: ./order-service
    container_name: order-service
    depends_on:
      mongo:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep java || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Inventory Service
  inventory-service:
    build: ./inventory-service
    container_name: inventory-service
    depends_on:
      mongo:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep java || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Zookeeper (modern version)
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  # Kafka Broker (modern version)
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_MODE=false
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper


volumes:
  mongo-data:
